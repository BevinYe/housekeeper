package com.luckhouse.housekeeper.db.entity;

// Generated 2014-8-10 16:26:15 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import static javax.persistence.GenerationType.IDENTITY;

/**
 * Tally generated by hbm2java
 */
@Entity
@Table(name = "tally", catalog = "housekeeper")
public class Tally implements java.io.Serializable {

	private static final long serialVersionUID = 5347211042966421892L;
	private Integer id;
	private User payer;
	private Tallytype tallytype;
	private String comment;
	private Integer createBy;
	private Date createDate;
	private String description;
	private Integer typeId;
	private Date payDate;
	private Integer totalExpenses;
	private Integer updateBy;
	private Date updateDate;
	private Set<Participant> participants = new HashSet<Participant>(0);

	public Tally() {
	}

	public Tally(User payer, Tallytype tallytype) {
		this.payer = payer;
		this.tallytype = tallytype;
	}

	public Tally(User payer, Tallytype tallytype, String comment,
			Integer createBy, Date createDate, String description,
			Integer typeId, Date payDate, Integer totalExpenses,
			Integer updateBy, Date updateDate, Set<Participant> participants) {
		this.payer = payer;
		this.tallytype = tallytype;
		this.comment = comment;
		this.createBy = createBy;
		this.createDate = createDate;
		this.description = description;
		this.typeId = typeId;
		this.payDate = payDate;
		this.totalExpenses = totalExpenses;
		this.updateBy = updateBy;
		this.updateDate = updateDate;
		this.participants = participants;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payerId", nullable = false)
	public User getPayer() {
		return this.payer;
	}

	public void setPayer(User payer) {
		this.payer = payer;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Tallytype getTallytype() {
		return this.tallytype;
	}

	public void setTallytype(Tallytype tallytype) {
		this.tallytype = tallytype;
	}

	@Column(name = "comment")
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "createBy")
	public Integer getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(Integer createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createDate", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "typeId")
	public Integer getTypeId() {
		return this.typeId;
	}

	public void setTypeId(Integer typeId) {
		this.typeId = typeId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "payDate", length = 10)
	public Date getPayDate() {
		return this.payDate;
	}

	public void setPayDate(Date payDate) {
		this.payDate = payDate;
	}

	@Column(name = "totalExpenses")
	public Integer getTotalExpenses() {
		return this.totalExpenses;
	}

	public void setTotalExpenses(Integer totalExpenses) {
		this.totalExpenses = totalExpenses;
	}

	@Column(name = "updateBy")
	public Integer getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(Integer updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateDate", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tally")
	public Set<Participant> getParticipants() {
		return this.participants;
	}

	public void setParticipants(Set<Participant> participants) {
		this.participants = participants;
	}

}
